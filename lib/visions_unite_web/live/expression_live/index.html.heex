<%= if @live_action in [:new, :edit] do %>
  <.modal return_to={Routes.expression_index_path(@socket, :index)}>
    <.live_component
      module={VisionsUniteWeb.ExpressionLive.FormComponent}
      id={@expression.id || :new}
      title={@page_title}
      action={@live_action}
      expression={@expression}
      my_subscriptions={@my_subscriptions}
      my_expressions={@my_expressions}
      audience={@audience}
      current_user_id={@current_user_id}
      return_to={Routes.expression_index_path(@socket, :index)}
    />
  </.modal>
<% end %>

<%= if Enum.count(@my_seeking_supports) != 0 do %>
  <b>Expressions Seeking Your Support</b>
  <table>
    <tbody id="expressions-seeking-support">
      <%= for %{expression: expression, group: group} <- @my_seeking_supports do %>
        <tr id={"seeking-support-#{expression.id}"}>
          <td>
            <ExpressionComponent.expression expression={expression} />
          </td>
          <td>
            For group: <%= group.title %>
          </td>
          <td>

            <div class="row">

            <.form
              let={f}
              for={:support_form}
              id={"support-form-#{expression.id}"}
              phx-submit="my_support"
              class="column">

              <%= submit "I support", phx_disable_with: "Saving..." %>
              <%= textarea f, :note, rows: 6, placeholder: "Reasons for why you support (optional)" %>

              <%= hidden_input f, :support, value: 1 %>
              <%= hidden_input f, :expression_id, value: expression.id %>
              <%= hidden_input f, :for_group_id, value: group.id %>

            </.form>

            <.form
              let={f}
              for={:support_form}
              id={"support-form-#{expression.id}"}
              phx-submit="my_support"
              class="column">

              <%= submit "I no not support", phx_disable_with: "Saving..." %>
              <%= textarea f, :note, rows: 6, placeholder: "Explanation for why I do not support (optional)"%>

              <%= hidden_input f, :support, value: 0 %>
              <%= hidden_input f, :expression_id, value: expression.id %>
              <%= hidden_input f, :for_group_id, value: group.id %>

            </.form>

            <.form
              let={f}
              for={:support_form}
              id={"support-form-#{expression.id}"}
              phx-submit="my_support"
              class="column">

              <%= submit "I object", phx_disable_with: "Saving..." %>
              <%= textarea f, :note, rows: 6, placeholder: "This is spam (for example)" %>
              <%= hidden_input f, :support, value: -1 %>
              <%= hidden_input f, :expression_id, value: expression.id %>
              <%= hidden_input f, :for_group_id, value: group.id %>
            </.form>

            </div>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<%= if Enum.count(@my_expressions) != 0 do %>
  <b>My Expressions</b>
  <table>
    <tbody id="my-expressions">
      <%= for expression <- @my_expressions do %>
        <tr id={"my-expression-#{expression.id}"}>
          <td>
            <ExpressionComponent.expression expression={expression} />
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<%= if Enum.count(@my_subscriptions) != 0 do %>
  <b>My Subscriptions</b>
  <table>
    <tbody id="my-subscriptions">
      <%= for expression <- @my_subscriptions do %>
        <tr id={"my-subscription-#{expression.id}"}>
          <td>
            <ExpressionComponent.expression expression={expression} />
          </td>
          <td>
            <button phx-click="unsubscribe" phx-value-expression_id={@expression.id}>Unsubscribe</button>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<%= if Enum.count(@fully_supported_expressions) != 0 do %>
  <b>Fully Supported Expressions</b>

  <table>
    <tbody id="fully-supported-expressions">
      <%= for expression <- @fully_supported_expressions do %>
        <tr id={"supported-expression-#{expression.id}"}>
          <td>
            <ExpressionComponent.expression expression={expression} />
          </td>
          <td>
            <button phx-click="subscribe" phx-value-expression_id={expression.id}>Subscribe</button>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<%= live_patch to: Routes.expression_index_path(@socket, :new) do %>
  <button>
    Create New Expression
  </button>
<% end %>

<br>
<br>

