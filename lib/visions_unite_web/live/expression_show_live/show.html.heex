<%= if @live_action in [:new] do %>
  <.modal return_to={Routes.my_expressions_index_path(@socket, :index)}>
    <.live_component
      module={VisionsUniteWeb.ExpressionLive.FormComponent}
      id={@expression.id || :new}
      title={@page_title}
      action={@live_action}
      expression={@new_expression}
      linked_expression_id={@linked_expression_id}
      linked_expression_title={@linked_expression_title}
      current_user_id={@current_user_id}
      return_to={Routes.my_expressions_index_path(@socket, :index)}
    />
  </.modal>
<% end %>

<%= if is_list(@expression.fully_supporteds) and Enum.count(@expression.fully_supporteds) !== 0 do %>
  <h1>
    / <%= List.first(@expression.fully_supporteds, ", ") %> / <%= @expression.title %>
  </h1>
<% else %>
  <% # Else, this expression is seeking support, and could have multiple groups %>
  <%= if Map.has_key?(assigns, :group) do %>
    <h1>
      / <%= @group %> / <%= @expression.title %>
    </h1>
  <% else %>
    <h1>
      / <%= @expression.title %>
    </h1>
  <% end %>
<% end %>

<%= if Enum.count(@fully_supporteds) !== 0 do %>
  <small>
    <b>
      <%= "(this expression has been fully supported by a sortition of the group: #{if !is_nil(List.first(@fully_supporteds).group_id) do VisionsUnite.Expressions.get_expression_title(List.first(@fully_supporteds).group_id) else "all" end})" %>
    </b>
  </small>
<% end %>

<p>
  <%= @expression.body %>
</p>

<%= if !@expression.seeking_support_from do %>
  <div class="roww">
    <%= if !is_nil(@expression.subscribed) and @expression.subscribed.subscribe do %>
      <button class="small" disabled>Join Conversation</button>
    <% else %>
      <button class="small" phx-click="subscribe" phx-value-expression_id={@expression.id}>Join Conversation</button>
    <% end %>

    <%= if @expression.subscribed do %>
      <button class="small" phx-click="ignore" phx-value-expression_id={@expression.id}>Ignore</button>
    <% else %>
      <button class="small" disabled>Ignore</button>
    <% end %>

    <button class="small">
      <%= live_patch to: Routes.expression_show_show_path(@socket, :new, @expression.id) do %>
        Create a Linked Expression
      <% end %>
    </button>
  </div>
<% end %>

<%= if @expression.seeking_support_from do %>
  <hr>

  <div class="roww">

    <.form
      let={f}
      for={:support_form}
      id={"support-form-#{@expression.id}"}
      phx-submit="my_support"
      class="columnn">

      <span>I support this expression<%= radio_button f, :support, 1 %></span>
      <span>I reject this expression<%= radio_button f, :support, -1 %></span>

      <%= submit "submit", phx_disable_with: "Saving...", value: :test2 %>

      <small>
        <details>
          <summary>
            Optional feedback
          </summary>
          <%= textarea f, :note, rows: 6, placeholder: "Optional reasons for why you support or reject (only visible by expression author)" %>
        </details>
      </small>

      <p>
        NOTE: You are 1 of <%= List.first(@expression.groups).sortition_count %> people to decide if this message should go to all <%= List.first(@expression.groups).subscriber_count %> people in group: <b><%= List.first(@expression.groups).link.title %></b>.
      </p>

      <%= hidden_input f, :expression_id, value: @expression.id %>
      <%= hidden_input f, :for_group_id, value: @expression.seeking_support_from.id %>

    </.form>

  </div>

<% end %>

<hr>

<h4>more information</h4>

<%= if is_nil(List.first(@expression.groups).link.id) do %>
  <div>
    <p>
      This expression (<%= @expression.title %>) needs support from <%= List.first(@expression.groups).quorum_count %> out of <%= List.first(@expression.groups).subscriber_count %> (sortition of <%= List.first(@expression.groups).sortition_count %>) of <b>all users</b> to be fully supported as a root expression. Currently <%= List.first(@expression.groups).support_count %> supporting.
    </p>
  </div>
<% else %>
  <%= for group <- @expression.groups do %>
    <div>
      <p>
        This expression (<%= @expression.title %>) needs support from <%= group.quorum_count %> out of <%= group.subscriber_count %> (sortition of <%= group.sortition_count %>)
        <code><%= group.link.title %></code> subscribers to be fully supported for the <%= group.link.title %> group. Currently <%= group.support_count %> supporting.
      </p>
    </div>
  <% end %>
<% end %>

<%= if @expression.author_id == @current_user_id and Map.has_key?(@expression, :supports) and Enum.count(@expression.supports) != 0 do %>
  <h4>user feedback</h4>
  <div>
    <ul>
      <%= for support <- @expression.supports do %>
        <li><%= support.note %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<%= if Enum.count(@children) !== 0 do %>
  <h3>Expressions linked to this one:</h3>
  <%= for child <- @children do %>
    <div class="boxed">
      <ExpressionComponent.expression expression={child} current_user_id={@current_user_id} />
      <%= child.body %>
    </div>
  <% end %>
<% end %>

<%= if true or @current_user.super_admin do %>
  <small>
    <details>
      <hr>
      <summary>
        <p class="centered">_________---------========= DEBUG INFO =========---------_________</p>
      </summary>
      <hr>

      <h4>supports</h4>
      <div>
        <ul>
          <%= for support <- @supports do %>
            <li><%= "#{VisionsUnite.Accounts.get_user!(support.user_id).email}, #{support.support}, \"#{support.note}\"" %></li>
          <% end %>
        </ul>
      </div>
      <h4>sortition</h4>
      <div>
        <ul>
          <%= for seeking_support <- @seeking_supports do %>
            <li><%= "Seeking support from: #{VisionsUnite.Accounts.get_user!(seeking_support.user_id).email} for group: #{if !is_nil(seeking_support.for_group_id) do VisionsUnite.Expressions.get_expression_title(seeking_support.for_group_id) else "all" end}" %></li>
          <% end %>
        </ul>
      </div>
      <h4>linkages</h4>
      <div>
        <ul>
          <%= for link <- @linkages do %>
            <li><%= "#{VisionsUnite.Expressions.get_expression_title(link.link_id)}" %></li>
          <% end %>
        </ul>
      </div>
      <h4>subscriptions</h4>
      <div>
        <ul>
          <%= for subscription <- @subscriptions do %>
            <li><%= "#{VisionsUnite.Accounts.get_user!(subscription.user_id).email} is subscribed?: #{subscription.subscribe}" %></li>
          <% end %>
        </ul>
      </div>
      <h4>fully supporteds</h4>
      <div>
        <ul>
          <%= for fully_supported <- @fully_supporteds do %>
            <li><%= "Fully supported for the group: #{if !is_nil(fully_supported.group_id) do VisionsUnite.Expressions.get_expression_title(fully_supported.group_id) else "all" end}" %></li>
          <% end %>
        </ul>
      </div>
    </details>
  </small>
<% end %>

<NavComponent.nav active={nil} />

